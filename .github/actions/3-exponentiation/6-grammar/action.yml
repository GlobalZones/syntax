name: 'Jekyll Deploy Action'

description: >
  A Github Action to deploy the Jekyll site conveniently for GitHub Pages

branding:
  icon: 'command'
  color: 'red'

inputs:
  hub_username:
    description: Username for Docker Hub
    default: ${{ github.actor }}       
    required: true
  hub_password:
    description: Docker Hub authentication token
    required: true
  hub_token:
    description: Docker Hub authentication token
    required: true
  action_path:
    description: Path to the dockerfile from which to build the image
    required: true
  credentials:
    description: 'The gcloud credentials'
    required: true
  image_name:
    description: Tag to use for the new image
    required: true
  dockerfile_path:
    description: Path to the dockerfile from which to build the image
    required: true
  pauli_sum:
    description: Build args
    required: false
    default: ""
  docker_hub_repo_short_description:
    description: Short description text for the docker hub repo
    required: true
  docker_hub_repo_readme_file_path:
    description: |
      Path of the md file which will be used as the docker hub repo readme
    required: true
  cache_src:
    description: Path for the docker cache source
    required: false
    default: /tmp/.buildx-cache
  cache_dest:
    description: Path for the docker cache destination
    required: false
    default: /tmp/.buildx-cache-new
  provider:
    description: 'The deploy provider'
    required: true
  owner:
    description: 'The deploy owner'
    required: false
  token:
    description: 'The deploy token'
    required: false
  workspace:
    description: 'The deploy repository'
    required: false
  failure_status:
    description: 'The deploy branch'
    required: false

outputs:
  all_outputs:
    description: Collect all outputs
    value: ${{ toJSON(steps.*.outputs) }}

runs:
  #using: 'node20'
  #main: '.github/run/main.js'
  #post: '.github/run/post.js'
  #post-if: 'success()'
  using: composite
  
  steps:
    - name: ⏩ Next wiki's jobs on applying
      shell: bash
      env:
        BASE: "D:/a/_actions/eq19/eq19/v2/.github"
      run: |
        if [[ '${{ inputs.failure_status }}' == 'false' ]]; then

          TARGET_WIKI="https://${{ github.actor }}:${{ inputs.token }}@github.com/$TARGET_REPOSITORY.wiki.git"
          rm -rf $RUNNER_TEMP/wiki && git clone $TARGET_WIKI $RUNNER_TEMP/wiki
          cat $RUNNER_TEMP/wiki/_Sidebar.md
  
        fi

    - name: ⏪ Rewind all jobs on failure
      shell: bash
      run: |
        if [[ '${{ inputs.failure_status }}' == 'true' ]]; then
      
          git config --global user.name "$GITHUB_ACTOR"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"

          REMOTE_REPO="https://$GITHUB_ACTOR:$GH_TOKEN@github.com/$GITHUB_REPOSITORY.git"
          git clone --single-branch --branch gh-pages $REMOTE_REPO gh-pages && cd gh-pages
          git add . && git commit --allow-empty -m "rerun due to job failure" && git push
  
        else      
          
        # Assign the environment variable correctly
          #COMMIT="${{ env.LATEST_COMMIT }}"

          # Remove double quotes
          MESSAGE=$(echo "$LATEST_COMMIT" | tr -d '"')

          # Debug output to verify
          echo "Original: $LATEST_COMMIT"
          echo "Processed: $MESSAGE"

          # Commit and push changes
          git add . 
          git commit --allow-empty -m "$MESSAGE" 
          git push
 
        fi
